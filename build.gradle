plugins {
    id 'application'
    id 'groovy'
    id 'com.palantir.graal' version '0.7.0'
}

group 'com.datadog'

repositories {
    jcenter()
}

ext {
    versions = [
      graalvm   : '20.1.0',
      jsr305    : '3.0.2',
      lanterna  : '3.1.0-beta1',
      micrometer: '1.5.1',
      picocli   : '4.3.2',
      spock     : '2.0-M2-groovy-3.0'
    ]
}

dependencies {
    implementation group: 'org.graalvm.sdk', name: 'graal-sdk', version: versions.graalvm
    implementation group: 'info.picocli', name: 'picocli', version: versions.picocli
    annotationProcessor group: 'info.picocli', name: 'picocli-codegen', version: versions.picocli
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: versions.jsr305
    implementation group: 'com.googlecode.lanterna', name: 'lanterna', version: versions.lanterna
    implementation group: 'io.micrometer', name: 'micrometer-core', version: versions.micrometer
    testImplementation group: 'org.spockframework', name: 'spock-core', version: versions.spock
}

mainClassName = 'com.datadog.yaala.Yaala'

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
    options.compilerArgs << "-Aproject=${project.group}/${project.name}"
}

tasks.withType(JavaExec) {
    jvmArgs '-noverify', '-XX:TieredStopAtLevel=1'
}

graal {
    graalVersion versions.graalvm
    javaVersion '11'
    outputName 'yaala'
    mainClass mainClassName
    [
      // '--allow-incomplete-classpath',
      '--no-server',
      '--no-fallback',
      '-H:+ReportExceptionStackTraces'
    ].each { option it }
}
